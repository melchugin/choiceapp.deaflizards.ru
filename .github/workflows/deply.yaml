name: Production deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker images
        run: |
          touch {db,backend,core,db,frontend}/.env
          docker-compose -f docker-compose.yml build --compress --force-rm --parallel --pull
        # TODO: run tests
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Push prod Docker images
        run: |
          docker images --format "{{.Repository}}:{{.Tag}}" ghcr.io/${{ github.repository_owner }}/choiceapp-* | while read IMAGE; do
            IMAGE_ID=$(echo $IMAGE | awk -F ":" '{print $1}')
            docker tag $IMAGE $IMAGE_ID:$GITHUB_SHA
            docker push $IMAGE_ID
          done
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare ssh key
        run: |
          echo "$DEPLOY_PRIVATE_KEY" > /tmp/deploy.key
          chmod 600 /tmp/deploy.key
        env:
          DEPLOY_PRIVATE_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Deply to prod
        run: |
          ssh -i /tmp/deploy.key -p $DEPLOY_PORT -oStrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && git pull && docker-compose -f docker-compose.yml pull && docker-compose -f docker-compose.yml up --force-recreate --no-build --detach"
          rm -f /tmp/deploy.key
        env:
          DEPLOY_PORT: ${{ secrets.DEPLOY_PORT }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PROD_PATH }}
